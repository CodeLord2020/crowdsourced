# Generated by Django 4.2.16 on 2024-12-24 19:54

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("cddpresources", "__first__"),
        ("cloud_resource", "0001_initial"),
        ("volunteer", "__first__"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(max_length=250, unique=True)),
                ("description", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("PENDING", "Pending Approval"),
                            ("APPROVED", "Approved"),
                            ("ACTIVE", "Active"),
                            ("IN_PROGRESS", "In Progress"),
                            ("COMPLETED", "Completed"),
                            ("CANCELLED", "Cancelled"),
                            ("POSTPONED", "Postponed"),
                        ],
                        default="DRAFT",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                            ("URGENT", "Urgent"),
                        ],
                        default="MEDIUM",
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField()),
                ("registration_deadline", models.DateTimeField()),
                ("location_name", models.CharField(max_length=200)),
                ("address", models.TextField()),
                (
                    "min_volunteers",
                    models.IntegerField(
                        help_text="Minimum number of volunteers needed",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "max_volunteers",
                    models.IntegerField(
                        help_text="Maximum number of volunteers allowed",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "current_volunteers",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("is_virtual", models.BooleanField(default=False)),
                ("virtual_meeting_link", models.URLField(blank=True, null=True)),
                ("prerequisites", models.TextField(blank=True)),
                ("equipment_provided", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_featured", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Event",
                "verbose_name_plural": "Events",
                "ordering": ["-start_date", "priority"],
            },
        ),
        migrations.CreateModel(
            name="EventCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                ("icon", models.CharField(blank=True, max_length=50)),
            ],
            options={
                "verbose_name": "Event Category",
                "verbose_name_plural": "Event Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="EventTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("description", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="EventResourceRequirement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity_required",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                (
                    "quantity_fulfilled",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                            ("URGENT", "Urgent"),
                        ],
                        default="MEDIUM",
                        max_length=20,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="event.event"
                    ),
                ),
                (
                    "resource",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cddpresources.resource",
                    ),
                ),
            ],
            options={
                "verbose_name": "Event Resource Requirement",
                "verbose_name_plural": "Event Resource Requirements",
                "ordering": ["priority", "resource__name"],
                "unique_together": {("event", "resource")},
            },
        ),
        migrations.AddField(
            model_name="event",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="events",
                to="event.eventcategory",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="coordinators",
            field=models.ManyToManyField(
                blank=True,
                related_name="coordinated_events",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="media",
            field=models.ManyToManyField(
                blank=True, related_name="events", to="cloud_resource.eventresources"
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="organizer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="organized_events",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="required_resources",
            field=models.ManyToManyField(
                related_name="events_required_in",
                through="event.EventResourceRequirement",
                to="cddpresources.resource",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="skills_required",
            field=models.ManyToManyField(
                blank=True, related_name="event_skills", to="volunteer.skill"
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="tags",
            field=models.ManyToManyField(blank=True, to="event.eventtag"),
        ),
        migrations.CreateModel(
            name="EventVolunteer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("signup_date", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("APPROVED", "Approved"),
                            ("DECLINED", "Declined"),
                            ("CANCELLED", "Cancelled"),
                            ("COMPLETED", "Completed"),
                            ("NO_SHOW", "No Show"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("assigned_role", models.CharField(blank=True, max_length=100)),
                (
                    "hours_logged",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("feedback", models.TextField(blank=True)),
                ("check_in_time", models.DateTimeField(blank=True, null=True)),
                ("check_out_time", models.DateTimeField(blank=True, null=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="event_volunteers",
                        to="event.event",
                    ),
                ),
                (
                    "volunteer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="event_signups",
                        to="volunteer.volunteer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Event Volunteer",
                "verbose_name_plural": "Event Volunteers",
                "ordering": ["signup_date"],
                "unique_together": {("event", "volunteer")},
            },
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(
                fields=["status", "start_date"], name="event_event_status_ded66b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(
                fields=["category", "status"], name="event_event_categor_0614c5_idx"
            ),
        ),
    ]
