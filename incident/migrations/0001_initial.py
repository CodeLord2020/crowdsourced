# Generated by Django 5.1.2 on 2024-11-08 10:00

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("cddpresources", "0001_initial"),
        ("cloud_resource", "0002_csrresourcemedia_eventresources_and_more"),
        ("reporters", "0002_reporter_created_at_reporter_updated_at"),
        ("responders", "0003_alter_responder_user_and_more"),
        ("volunteer", "0004_skill_created_at_skill_updated_at_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Incident",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("location", django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ("address", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("REPORTED", "Reported"),
                            ("VERIFIED", "Verified"),
                            ("RESPONDING", "Responding"),
                            ("IN_PROGRESS", "In Progress"),
                            ("RESOLVED", "Resolved"),
                            ("CLOSED", "Closed"),
                            ("INVALID", "Invalid"),
                        ],
                        default="REPORTED",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                            ("CRITICAL", "Critical"),
                            ("EMERGENCY", "Emergency"),
                        ],
                        default="MEDIUM",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("verified_at", models.DateTimeField(blank=True, null=True)),
                ("is_sensitive", models.BooleanField(default=False)),
                ("is_anonymous", models.BooleanField(default=False)),
                (
                    "estimated_resolution_time",
                    models.IntegerField(
                        blank=True,
                        help_text="Estimated time to resolve in minutes",
                        null=True,
                    ),
                ),
                (
                    "estimated_people_affected",
                    models.IntegerField(blank=True, null=True),
                ),
                ("media_files", models.JSONField(default=list)),
                ("tags", models.JSONField(default=list)),
                (
                    "media_resource",
                    models.ManyToManyField(
                        related_name="incident_media",
                        to="cloud_resource.incidentmediaresource",
                    ),
                ),
                (
                    "reporter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="reporters.reporter",
                    ),
                ),
                (
                    "required_skills",
                    models.ManyToManyField(
                        related_name="incident_skills", to="volunteer.skill"
                    ),
                ),
                (
                    "verified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="verified_incidents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IncidentAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("PRIMARY", "Primary Responder"),
                            ("SECONDARY", "Secondary Responder"),
                            ("SUPERVISOR", "Supervisor"),
                            ("SPECIALIST", "Specialist"),
                        ],
                        max_length=20,
                    ),
                ),
                ("assigned_at", models.DateTimeField(auto_now_add=True)),
                ("accepted_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "incident",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="incident.incident",
                    ),
                ),
                (
                    "responder",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="responders.responder",
                    ),
                ),
            ],
            options={
                "unique_together": {("incident", "responder")},
            },
        ),
        migrations.AddField(
            model_name="incident",
            name="assigned_responders",
            field=models.ManyToManyField(
                related_name="assigned_incidents",
                through="incident.IncidentAssignment",
                to="responders.responder",
            ),
        ),
        migrations.CreateModel(
            name="IncidentCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                (
                    "severity_level",
                    models.IntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)],
                        help_text="1: Minor, 5: Critical",
                    ),
                ),
                ("requires_verification", models.BooleanField(default=False)),
                ("requires_immediate_response", models.BooleanField(default=False)),
                ("requires_professional_responder", models.BooleanField(default=False)),
                ("auto_notify_authorities", models.BooleanField(default=False)),
                (
                    "estimated_response_time",
                    models.IntegerField(
                        blank=True,
                        help_text="Estimated time for first response",
                        null=True,
                    ),
                ),
                (
                    "parent_category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="subcategories",
                        to="incident.incidentcategory",
                    ),
                ),
                (
                    "required_skills",
                    models.ManyToManyField(blank=True, to="volunteer.skill"),
                ),
            ],
            options={
                "verbose_name_plural": "incident categories",
                "ordering": ["severity_level", "name"],
            },
        ),
        migrations.AddField(
            model_name="incident",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="incident.incidentcategory",
            ),
        ),
        migrations.CreateModel(
            name="IncidentResource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity_requested", models.IntegerField()),
                ("quantity_allocated", models.IntegerField(default=0)),
                ("requested_at", models.DateTimeField(auto_now_add=True)),
                ("allocated_at", models.DateTimeField(blank=True, null=True)),
                ("returned_at", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("REQUESTED", "Requested"),
                            ("PARTIALLY_ALLOCATED", "Partially Allocated"),
                            ("FULLY_ALLOCATED", "Fully Allocated"),
                            ("RETURNED", "Returned"),
                            ("CONSUMED", "Consumed"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="REQUESTED",
                        max_length=20,
                    ),
                ),
                (
                    "return_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("PENDING", "Return Pending"),
                            ("SUBMITTED", "Return Submitted"),
                            ("VERIFIED", "Return Verified"),
                            ("REJECTED", "Return Rejected"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("return_verified_at", models.DateTimeField(blank=True, null=True)),
                ("return_notes", models.TextField(blank=True)),
                (
                    "partial_returns",
                    models.JSONField(
                        default=list,
                        help_text="Track history of partial returns [{quantity: int, date: datetime, verified_by: int}]",
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                            ("CRITICAL", "Critical"),
                            ("EMERGENCY", "Emergency"),
                        ],
                        default="MEDIUM",
                        max_length=20,
                    ),
                ),
                ("expected_return_date", models.DateTimeField(blank=True, null=True)),
                (
                    "allocated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resource_allocations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "incident",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="incident.incident",
                    ),
                ),
                (
                    "requested_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resource_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "resource",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cddpresources.resource",
                    ),
                ),
                (
                    "return_verified_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="verified_returns",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="incident",
            name="required_resources",
            field=models.ManyToManyField(
                related_name="incidents_needed",
                through="incident.IncidentResource",
                to="cddpresources.resource",
            ),
        ),
        migrations.CreateModel(
            name="IncidentUpdate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "status_changed_to",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("REPORTED", "Reported"),
                            ("VERIFIED", "Verified"),
                            ("RESPONDING", "Responding"),
                            ("IN_PROGRESS", "In Progress"),
                            ("RESOLVED", "Resolved"),
                            ("CLOSED", "Closed"),
                            ("INVALID", "Invalid"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("media_files", models.JSONField(default=list)),
                (
                    "incident",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="incident_timeline",
                        to="incident.incident",
                    ),
                ),
                (
                    "media_resource",
                    models.ManyToManyField(
                        related_name="incidentupdate_media",
                        to="cloud_resource.incidentmediaresource",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="IncidentVolunteer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("assigned_at", models.DateTimeField(auto_now_add=True)),
                ("accepted_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("hours_contributed", models.FloatField(default=0)),
                (
                    "incident",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="incident.incident",
                    ),
                ),
                (
                    "volunteer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="volunteer.volunteer",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="incident",
            name="assigned_volunteers",
            field=models.ManyToManyField(
                related_name="assigned_incidents",
                through="incident.IncidentVolunteer",
                to="volunteer.volunteer",
            ),
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("IN_PROGRESS", "In Progress"),
                            ("COMPLETED", "Completed"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=3
                    ),
                ),
                ("estimated_time", models.IntegerField(blank=True, null=True)),
                ("due_date", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "incident",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to="incident.incident",
                    ),
                ),
                (
                    "required_skills",
                    models.ManyToManyField(blank=True, to="volunteer.skill"),
                ),
            ],
        ),
        migrations.AddField(
            model_name="incidentvolunteer",
            name="tasks",
            field=models.ManyToManyField(
                related_name="task_volunteers", to="incident.task"
            ),
        ),
        migrations.AddIndex(
            model_name="incidentresource",
            index=models.Index(
                fields=["status", "priority"], name="incident_in_status_ed83ee_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="incidentresource",
            index=models.Index(
                fields=["incident", "resource"], name="incident_in_inciden_ae9738_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="incidentresource",
            index=models.Index(
                fields=["requested_at"], name="incident_in_request_091f12_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="incident",
            index=models.Index(
                fields=["status", "priority"], name="incident_in_status_65e5f8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="incident",
            index=models.Index(
                fields=["created_at"], name="incident_in_created_ed4b56_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="incident",
            index=models.Index(
                fields=["category", "status"], name="incident_in_categor_2f982a_idx"
            ),
        ),
    ]
